[{"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\index.js":"1","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\App.js":"2","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\reportWebVitals.js":"3","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Login\\index.js":"4","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Login\\components\\form.js":"5","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Register\\index.js":"6","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Register\\components\\form.js":"7","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\auth.js":"8","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\api.js":"9","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\index.js":"10","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\nav.js":"11","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\sidemenu.js":"12","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\project.js":"13","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\user.js":"14","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\utils\\utils.js":"15","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\createlist.js":"16","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\createtask.js":"17"},{"size":559,"mtime":1610637611273,"results":"18","hashOfConfig":"19"},{"size":551,"mtime":1610917270808,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1610631328838,"results":"21","hashOfConfig":"19"},{"size":1716,"mtime":1612025782095,"results":"22","hashOfConfig":"19"},{"size":3040,"mtime":1610824423783,"results":"23","hashOfConfig":"19"},{"size":1644,"mtime":1610841258324,"results":"24","hashOfConfig":"19"},{"size":3392,"mtime":1610824355516,"results":"25","hashOfConfig":"19"},{"size":464,"mtime":1611414512471,"results":"26","hashOfConfig":"19"},{"size":154,"mtime":1610831395338,"results":"27","hashOfConfig":"19"},{"size":6850,"mtime":1612025494692,"results":"28","hashOfConfig":"19"},{"size":6411,"mtime":1611438224838,"results":"29","hashOfConfig":"19"},{"size":1702,"mtime":1612024214792,"results":"30","hashOfConfig":"19"},{"size":1277,"mtime":1611649215329,"results":"31","hashOfConfig":"19"},{"size":1113,"mtime":1612025994762,"results":"32","hashOfConfig":"19"},{"size":224,"mtime":1612025748914,"results":"33","hashOfConfig":"19"},{"size":1159,"mtime":1611436925212,"results":"34","hashOfConfig":"19"},{"size":1118,"mtime":1611490974289,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1wshp4d",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\index.js",[],["78","79"],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\App.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\reportWebVitals.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Login\\index.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Login\\components\\form.js",["80","81","82","83"],"import React from \"react\";\r\nimport { Formik, /*useFormikContext*/ } from \"formik\";\r\nimport { Input, Form, SubmitButton } from 'formik-antd';\r\nimport { UserOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport { Alert, Button, Space, Row, Col, Typography } from \"antd\";\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <Formik\r\n        initialValues={props.initialValues}\r\n        validate={props.formValidate}\r\n        onSubmit={props.handleFormSubmit}\r\n        validateOnMount={true}\r\n        >\r\n        {({\r\n            isValid,\r\n            handleSubmit,\r\n        }) => (\r\n            <Row align=\"middle\" justify=\"center\" style={{height: \"100vh\"}}>\r\n                <Col xs={{ span: 24}} md={{ span:12 }} lg={{ span: 8}}>\r\n                    <Form onSubmit={{handleSubmit}} style={{padding: \"2rem\"}}>\r\n                        <Typography.Title level={4} style={{textAlign: \"center\", marginBottom: \"2rem\"}}>Log in</Typography.Title>\r\n                        <Alert\r\n                            message={props.feedBack ? props.feedBack.message : \"\"}\r\n                            type={props.feedBack ? props.feedBack.type : \"\"}\r\n                            showIcon\r\n                            style={{marginBottom: \"1.5rem\", display: !props.feedBack.message ? \"None\" : \"\"}}\r\n                        />\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24}} md={{ span:24 }} lg={{ span: 24}}>\r\n                                <Input name=\"email\" type=\"email\" placeholder=\"Enter email\" size=\"large\" prefix={<MailOutlined />} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24}} md={{ span:24 }} lg={{ span: 24}}>\r\n                                <Input \r\n                                    name=\"password\" \r\n                                    type=\"password\" \r\n                                    placeholder=\"Enter password\" \r\n                                    size=\"large\" \r\n                                    prefix={<EyeInvisibleOutlined />}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                            <SubmitButton\r\n                                style={{backgroundColor: \"#4287f5\", color: \"white\"}}\r\n                                block\r\n                                disabled={!isValid}\r\n                                size=\"large\"\r\n                            >\r\n                                Login\r\n                            </SubmitButton>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row> \r\n        )}\r\n        </Formik>\r\n    )\r\n};\r\n\r\nexport default LoginForm;","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Register\\index.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Register\\components\\form.js",["84","85","86"],"import React from \"react\";\r\nimport { Formik, /*useFormikContext*/ } from \"formik\";\r\nimport { Input, Form, SubmitButton } from 'formik-antd';\r\nimport { UserOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport { Alert, Button, Space, Row, Col, Typography } from \"antd\";\r\n\r\n\r\n\r\nconst RegisterForm = (props) => {\r\n    return (\r\n        <Formik\r\n        initialValues={props.initialValues}\r\n        validate={props.formValidate}\r\n        onSubmit={props.handleFormSubmit}\r\n        validateOnMount={true}\r\n        >\r\n        {({\r\n            isValid,\r\n            handleSubmit,\r\n        }) => (\r\n            <Row align=\"middle\" justify=\"center\" style={{height: \"100vh\"}}>\r\n                <Col xs={{ span: 24}} md={{ span:12 }} lg={{ span: 8}}>\r\n                    <Form onSubmit={{handleSubmit}} style={{padding: \"2rem\"}}>\r\n                        <Typography.Title level={4} style={{textAlign: \"center\", marginBottom: \"2rem\"}}>Sign Up</Typography.Title>\r\n                        <Alert\r\n                            message={props.feedBack ? props.feedBack.message : \"\"}\r\n                            type={props.feedBack ? props.feedBack.type : \"\"}\r\n                            showIcon\r\n                            style={{marginBottom: \"1.5rem\", display: !props.feedBack.message ? \"None\" : \"\"}}\r\n                        />\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24}} md={{ span:24 }} lg={{ span: 24}}>\r\n                                <Input name=\"username\" type=\"text\" placeholder=\"Enter username\" size=\"large\" prefix={<UserOutlined />} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24}} md={{ span:24 }} lg={{ span: 24}}>\r\n                                <Input name=\"email\" type=\"email\" placeholder=\"Enter email\" size=\"large\" prefix={<MailOutlined />} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24}} md={{ span:24 }} lg={{ span: 24}}>\r\n                                <Input \r\n                                    name=\"password\" \r\n                                    type=\"password\" \r\n                                    placeholder=\"Enter password\" \r\n                                    size=\"large\" \r\n                                    prefix={<EyeInvisibleOutlined />}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                            <SubmitButton\r\n                                style={{backgroundColor: \"#4287f5\", color: \"white\"}}\r\n                                block\r\n                                disabled={!isValid}\r\n                                size=\"large\"\r\n                            >\r\n                                Register\r\n                            </SubmitButton>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row> \r\n        )}\r\n        </Formik>\r\n    )\r\n};\r\n\r\nexport default RegisterForm;","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\auth.js",["87"],"import axios from \"./api\";\r\nimport { grabUserToken } from \"../utils/utils\";\r\n\r\n\r\nexport const createUserRequest = (payload) => {\r\n    return axios.post(\"register\", payload)\r\n}\r\n\r\nexport const loginUserRequest = (payload) => {\r\n    return axios.post(\"login\", payload)\r\n}\r\n\r\nexport const refreshTokenRequest = () => {\r\n    const token = grabUserToken();\r\n    return axios.post(\"refresh\", {}, {\r\n        headers: {\r\n            Authorization: \"\"\r\n        }\r\n    })\r\n}","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\api.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\index.js",["88","89","90"],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\nav.js",["91","92","93","94","95","96","97"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: \"\",\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NavBar(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\" onClick={props.showModal}>\r\n          <AddIcon />\r\n        </IconButton>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={props.handleClick}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" style={{color: \"white\"}} noWrap>\r\n            ErgoLista\r\n          </Typography>\r\n          {/*<div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>*/}\r\n          <div className={classes.grow} />\r\n          <div>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\" onClick={props.showModal}>\r\n              <AddIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n         {/*<div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n            </div>*/}\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\sidemenu.js",["98","99","100","101"],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\project.js",["102","103"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Result, Button } from 'antd';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    //textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function ProjectView(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root} key={props.currentList}>\r\n      <h1 style={{textAlign: \"center\", padding: \"1rem\"}}>{props.currentList.name}</h1>\r\n      {props.currentList.tasks?.length==0 ? <Result\r\n            status=\"404\"\r\n            title=\"\"\r\n            subTitle=\"You Have not Added Any Task for This Project.\"\r\n          /> : <></>\r\n      }\r\n      <Grid container spacing={1} style={{padding: \"1rem\"}}>\r\n        {props.currentList.tasks?.map(task=>\r\n          <Grid item xs={12}>\r\n           <Paper className={classes.paper} style={{color: \"black\"}}>{task.name}</Paper>\r\n          </Grid>\r\n        )}\r\n        <Button type=\"primary\" onClick={props.showModal} style={{marginTop: \"1rem\"}}>Add Task</Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\user.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\utils\\utils.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\createlist.js",["104","105"],"import React, { useState } from 'react';\r\nimport { Modal, Button } from 'antd';\r\nimport { Input } from 'antd';\r\nimport { ProjectOutlined } from '@ant-design/icons';\r\nimport { isEmptyArray } from 'formik';\r\nimport { Alert } from 'antd';\r\n\r\n\r\n\r\nconst CreateListModal = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <Modal title=\"Create Project\" \r\n        visible={props.isModalVisible} \r\n        onOk={props.handleOk} \r\n        onCancel={props.handleCancel}\r\n        footer={\"\"} \r\n        centered\r\n      >\r\n        {props.feedBack.message ? <Alert message={props.feedBack.message} type={props.feedBack.type} style={{marginBottom: \"1rem\"}} showIcon /> : \"\"}\r\n        <Input size=\"large\" onChange={(e)=>props.changeCurrentValue(e.currentTarget.value)} placeholder=\"Project Name\" prefix={<ProjectOutlined />} />\r\n        <Button \r\n          type=\"primary\" \r\n          block style={{marginTop: \"1rem\"}} \r\n          disabled={!props.modalState.buttonState}\r\n          onClick={props.handleButtonClick}\r\n          loading={props.modalState.isLoading}\r\n        >\r\n            Submit\r\n        </Button>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateListModal;","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\createtask.js",["106","107"],"import React, { useState } from 'react';\r\nimport { Modal, Button } from 'antd';\r\nimport { Input } from 'antd';\r\nimport { ProjectOutlined } from '@ant-design/icons';\r\nimport { isEmptyArray } from 'formik';\r\nimport { Alert } from 'antd';\r\n\r\n\r\n\r\nconst CreateTaskModal = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <Modal title=\"Add Task\" \r\n        visible={props.isModalVisible} \r\n        onCancel={props.handleCancel}\r\n        footer={\"\"} \r\n        centered\r\n      >\r\n        {props.feedBack.message ? <Alert message={props.feedBack.message} type={props.feedBack.type} style={{marginBottom: \"1rem\"}} showIcon /> : \"\"}\r\n        <Input size=\"large\" onChange={(e)=>props.changeCurrentValue(e.currentTarget.value)} placeholder=\"Task Name\" prefix={<ProjectOutlined />} />\r\n        <Button \r\n          type=\"primary\" \r\n          block style={{marginTop: \"1rem\"}} \r\n          disabled={!props.modalState.buttonState}\r\n          onClick={props.handleButtonClick}\r\n          loading={props.modalState.isLoading}\r\n        >\r\n            Submit\r\n        </Button>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTaskModal;",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":22},{"ruleId":"112","severity":1,"message":"116","line":5,"column":32,"nodeType":"114","messageId":"115","endLine":5,"endColumn":42},{"ruleId":"112","severity":1,"message":"117","line":6,"column":17,"nodeType":"114","messageId":"115","endLine":6,"endColumn":23},{"ruleId":"112","severity":1,"message":"118","line":6,"column":25,"nodeType":"114","messageId":"115","endLine":6,"endColumn":30},{"ruleId":"112","severity":1,"message":"116","line":5,"column":32,"nodeType":"114","messageId":"115","endLine":5,"endColumn":42},{"ruleId":"112","severity":1,"message":"117","line":6,"column":17,"nodeType":"114","messageId":"115","endLine":6,"endColumn":23},{"ruleId":"112","severity":1,"message":"118","line":6,"column":25,"nodeType":"114","messageId":"115","endLine":6,"endColumn":30},{"ruleId":"112","severity":1,"message":"119","line":14,"column":11,"nodeType":"114","messageId":"115","endLine":14,"endColumn":16},{"ruleId":"112","severity":1,"message":"120","line":1,"column":38,"nodeType":"114","messageId":"115","endLine":1,"endColumn":48},{"ruleId":"121","severity":1,"message":"122","line":39,"column":57,"nodeType":"123","messageId":"124","endLine":39,"endColumn":59},{"ruleId":"112","severity":1,"message":"125","line":133,"column":13,"nodeType":"114","messageId":"115","endLine":133,"endColumn":20},{"ruleId":"112","severity":1,"message":"126","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":17},{"ruleId":"112","severity":1,"message":"127","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":13},{"ruleId":"112","severity":1,"message":"128","line":12,"column":8,"nodeType":"114","messageId":"115","endLine":12,"endColumn":18},{"ruleId":"112","severity":1,"message":"129","line":14,"column":8,"nodeType":"114","messageId":"115","endLine":14,"endColumn":16},{"ruleId":"112","severity":1,"message":"130","line":15,"column":8,"nodeType":"114","messageId":"115","endLine":15,"endColumn":25},{"ruleId":"112","severity":1,"message":"131","line":16,"column":8,"nodeType":"114","messageId":"115","endLine":16,"endColumn":16},{"ruleId":"112","severity":1,"message":"132","line":104,"column":9,"nodeType":"114","messageId":"115","endLine":104,"endColumn":29},{"ruleId":"112","severity":1,"message":"133","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"117","line":2,"column":16,"nodeType":"114","messageId":"115","endLine":2,"endColumn":22},{"ruleId":"112","severity":1,"message":"134","line":7,"column":3,"nodeType":"114","messageId":"115","endLine":7,"endColumn":21},{"ruleId":"112","severity":1,"message":"135","line":8,"column":3,"nodeType":"114","messageId":"115","endLine":8,"endColumn":19},{"ruleId":"112","severity":1,"message":"133","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":24,"column":39,"nodeType":"123","messageId":"124","endLine":24,"endColumn":41},{"ruleId":"112","severity":1,"message":"133","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"136","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":22},{"ruleId":"112","severity":1,"message":"133","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"136","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":22},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'UserOutlined' is defined but never used.","Identifier","unusedVar","'EyeTwoTone' is defined but never used.","'Button' is defined but never used.","'Space' is defined but never used.","'token' is assigned a value but never used.","'useHistory' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'SubMenu' is assigned a value but never used.","'InputBase' is defined but never used.","'Badge' is defined but never used.","'SearchIcon' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'MoreIcon' is defined but never used.","'handleMobileMenuOpen' is assigned a value but never used.","'useState' is defined but never used.","'MenuUnfoldOutlined' is defined but never used.","'MenuFoldOutlined' is defined but never used.","'isEmptyArray' is defined but never used.","no-global-assign","no-unsafe-negation"]