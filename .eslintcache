[{"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\index.js":"1","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\App.js":"2","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\reportWebVitals.js":"3","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Login\\index.js":"4","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Login\\components\\form.js":"5","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Register\\index.js":"6","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Register\\components\\form.js":"7","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\auth.js":"8","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\api.js":"9","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\index.js":"10","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\nav.js":"11","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\sidemenu.js":"12","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\project.js":"13","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\user.js":"14","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\utils\\utils.js":"15","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\createlist.js":"16"},{"size":559,"mtime":1610637611273,"results":"17","hashOfConfig":"18"},{"size":551,"mtime":1610917270808,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610631328838,"results":"20","hashOfConfig":"18"},{"size":1713,"mtime":1611436457441,"results":"21","hashOfConfig":"18"},{"size":3040,"mtime":1610824423783,"results":"22","hashOfConfig":"18"},{"size":1644,"mtime":1610841258324,"results":"23","hashOfConfig":"18"},{"size":3392,"mtime":1610824355516,"results":"24","hashOfConfig":"18"},{"size":464,"mtime":1611414512471,"results":"25","hashOfConfig":"18"},{"size":154,"mtime":1610831395338,"results":"26","hashOfConfig":"18"},{"size":3504,"mtime":1611437541746,"results":"27","hashOfConfig":"18"},{"size":6411,"mtime":1611438224838,"results":"28","hashOfConfig":"18"},{"size":1285,"mtime":1611420955449,"results":"29","hashOfConfig":"18"},{"size":928,"mtime":1610996423707,"results":"30","hashOfConfig":"18"},{"size":607,"mtime":1611436365320,"results":"31","hashOfConfig":"18"},{"size":98,"mtime":1611414587346,"results":"32","hashOfConfig":"18"},{"size":1159,"mtime":1611436925212,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1wshp4d",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\index.js",[],["71","72"],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\App.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\reportWebVitals.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Login\\index.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Login\\components\\form.js",["73","74","75","76"],"import React from \"react\";\r\nimport { Formik, /*useFormikContext*/ } from \"formik\";\r\nimport { Input, Form, SubmitButton } from 'formik-antd';\r\nimport { UserOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport { Alert, Button, Space, Row, Col, Typography } from \"antd\";\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <Formik\r\n        initialValues={props.initialValues}\r\n        validate={props.formValidate}\r\n        onSubmit={props.handleFormSubmit}\r\n        validateOnMount={true}\r\n        >\r\n        {({\r\n            isValid,\r\n            handleSubmit,\r\n        }) => (\r\n            <Row align=\"middle\" justify=\"center\" style={{height: \"100vh\"}}>\r\n                <Col xs={{ span: 24}} md={{ span:12 }} lg={{ span: 8}}>\r\n                    <Form onSubmit={{handleSubmit}} style={{padding: \"2rem\"}}>\r\n                        <Typography.Title level={4} style={{textAlign: \"center\", marginBottom: \"2rem\"}}>Log in</Typography.Title>\r\n                        <Alert\r\n                            message={props.feedBack ? props.feedBack.message : \"\"}\r\n                            type={props.feedBack ? props.feedBack.type : \"\"}\r\n                            showIcon\r\n                            style={{marginBottom: \"1.5rem\", display: !props.feedBack.message ? \"None\" : \"\"}}\r\n                        />\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24}} md={{ span:24 }} lg={{ span: 24}}>\r\n                                <Input name=\"email\" type=\"email\" placeholder=\"Enter email\" size=\"large\" prefix={<MailOutlined />} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24}} md={{ span:24 }} lg={{ span: 24}}>\r\n                                <Input \r\n                                    name=\"password\" \r\n                                    type=\"password\" \r\n                                    placeholder=\"Enter password\" \r\n                                    size=\"large\" \r\n                                    prefix={<EyeInvisibleOutlined />}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                            <SubmitButton\r\n                                style={{backgroundColor: \"#4287f5\", color: \"white\"}}\r\n                                block\r\n                                disabled={!isValid}\r\n                                size=\"large\"\r\n                            >\r\n                                Login\r\n                            </SubmitButton>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row> \r\n        )}\r\n        </Formik>\r\n    )\r\n};\r\n\r\nexport default LoginForm;","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Register\\index.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Register\\components\\form.js",["77","78","79"],"import React from \"react\";\r\nimport { Formik, /*useFormikContext*/ } from \"formik\";\r\nimport { Input, Form, SubmitButton } from 'formik-antd';\r\nimport { UserOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport { Alert, Button, Space, Row, Col, Typography } from \"antd\";\r\n\r\n\r\n\r\nconst RegisterForm = (props) => {\r\n    return (\r\n        <Formik\r\n        initialValues={props.initialValues}\r\n        validate={props.formValidate}\r\n        onSubmit={props.handleFormSubmit}\r\n        validateOnMount={true}\r\n        >\r\n        {({\r\n            isValid,\r\n            handleSubmit,\r\n        }) => (\r\n            <Row align=\"middle\" justify=\"center\" style={{height: \"100vh\"}}>\r\n                <Col xs={{ span: 24}} md={{ span:12 }} lg={{ span: 8}}>\r\n                    <Form onSubmit={{handleSubmit}} style={{padding: \"2rem\"}}>\r\n                        <Typography.Title level={4} style={{textAlign: \"center\", marginBottom: \"2rem\"}}>Sign Up</Typography.Title>\r\n                        <Alert\r\n                            message={props.feedBack ? props.feedBack.message : \"\"}\r\n                            type={props.feedBack ? props.feedBack.type : \"\"}\r\n                            showIcon\r\n                            style={{marginBottom: \"1.5rem\", display: !props.feedBack.message ? \"None\" : \"\"}}\r\n                        />\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24}} md={{ span:24 }} lg={{ span: 24}}>\r\n                                <Input name=\"username\" type=\"text\" placeholder=\"Enter username\" size=\"large\" prefix={<UserOutlined />} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24}} md={{ span:24 }} lg={{ span: 24}}>\r\n                                <Input name=\"email\" type=\"email\" placeholder=\"Enter email\" size=\"large\" prefix={<MailOutlined />} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24}} md={{ span:24 }} lg={{ span: 24}}>\r\n                                <Input \r\n                                    name=\"password\" \r\n                                    type=\"password\" \r\n                                    placeholder=\"Enter password\" \r\n                                    size=\"large\" \r\n                                    prefix={<EyeInvisibleOutlined />}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                            <SubmitButton\r\n                                style={{backgroundColor: \"#4287f5\", color: \"white\"}}\r\n                                block\r\n                                disabled={!isValid}\r\n                                size=\"large\"\r\n                            >\r\n                                Register\r\n                            </SubmitButton>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row> \r\n        )}\r\n        </Formik>\r\n    )\r\n};\r\n\r\nexport default RegisterForm;","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\auth.js",["80"],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\api.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\index.js",["81"],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\nav.js",["82","83","84","85","86","87","88"],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\sidemenu.js",["89","90","91","92"],"import React, { useState } from \"react\";\r\nimport { Menu, Button } from 'antd';\r\nimport {\r\n  SettingOutlined,\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  ScheduleOutlined,\r\n  LogoutOutlined,\r\n  KeyOutlined,\r\n  UserOutlined,\r\n  TagsOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst SideMenu = (props) => {\r\n    \r\n    return (\r\n      <div style={{ width: props.menuWidth }}>\r\n        <Menu\r\n          defaultSelectedKeys={['1']}\r\n          defaultOpenKeys={['sub1']}\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          inlineCollapsed={props.toggleState}\r\n          style={{height: \"100vh\"}}\r\n        >\r\n          <SubMenu key=\"sub1\" icon={<ScheduleOutlined />} title=\"Projects\">\r\n            {\r\n              props.userList.map(list=><Menu.Item key={list.id} icon={<TagsOutlined />}>{list.name}</Menu.Item>)\r\n            }\r\n          </SubMenu>\r\n          <SubMenu key=\"sub2\" icon={<SettingOutlined />} title=\"Account\">\r\n            <Menu.Item key=\"9\" icon={<UserOutlined />}>Profile</Menu.Item>\r\n            <Menu.Item key=\"10\" icon={<KeyOutlined />}>Password Change</Menu.Item>\r\n            <Menu.Item key=\"11\" icon={<LogoutOutlined />}>Logout</Menu.Item>\r\n          </SubMenu>\r\n        </Menu>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default SideMenu;","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\project.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\user.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\utils\\utils.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\createlist.js",["93","94"],"import React, { useState } from 'react';\r\nimport { Modal, Button } from 'antd';\r\nimport { Input } from 'antd';\r\nimport { ProjectOutlined } from '@ant-design/icons';\r\nimport { isEmptyArray } from 'formik';\r\nimport { Alert } from 'antd';\r\n\r\n\r\n\r\nconst CreateListModal = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <Modal title=\"Create Project\" \r\n        visible={props.isModalVisible} \r\n        onOk={props.handleOk} \r\n        onCancel={props.handleCancel}\r\n        footer={\"\"} \r\n        centered\r\n      >\r\n        {props.feedBack.message ? <Alert message={props.feedBack.message} type={props.feedBack.type} style={{marginBottom: \"1rem\"}} showIcon /> : \"\"}\r\n        <Input size=\"large\" onChange={(e)=>props.changeCurrentValue(e.currentTarget.value)} placeholder=\"Project Name\" prefix={<ProjectOutlined />} />\r\n        <Button \r\n          type=\"primary\" \r\n          block style={{marginTop: \"1rem\"}} \r\n          disabled={!props.modalState.buttonState}\r\n          onClick={props.handleButtonClick}\r\n          loading={props.modalState.isLoading}\r\n        >\r\n            Submit\r\n        </Button>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateListModal;",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":22},{"ruleId":"99","severity":1,"message":"103","line":5,"column":32,"nodeType":"101","messageId":"102","endLine":5,"endColumn":42},{"ruleId":"99","severity":1,"message":"104","line":6,"column":17,"nodeType":"101","messageId":"102","endLine":6,"endColumn":23},{"ruleId":"99","severity":1,"message":"105","line":6,"column":25,"nodeType":"101","messageId":"102","endLine":6,"endColumn":30},{"ruleId":"99","severity":1,"message":"103","line":5,"column":32,"nodeType":"101","messageId":"102","endLine":5,"endColumn":42},{"ruleId":"99","severity":1,"message":"104","line":6,"column":17,"nodeType":"101","messageId":"102","endLine":6,"endColumn":23},{"ruleId":"99","severity":1,"message":"105","line":6,"column":25,"nodeType":"101","messageId":"102","endLine":6,"endColumn":30},{"ruleId":"99","severity":1,"message":"106","line":14,"column":11,"nodeType":"101","messageId":"102","endLine":14,"endColumn":16},{"ruleId":"99","severity":1,"message":"107","line":76,"column":13,"nodeType":"101","messageId":"102","endLine":76,"endColumn":20},{"ruleId":"99","severity":1,"message":"108","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":17},{"ruleId":"99","severity":1,"message":"109","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":13},{"ruleId":"99","severity":1,"message":"110","line":12,"column":8,"nodeType":"101","messageId":"102","endLine":12,"endColumn":18},{"ruleId":"99","severity":1,"message":"111","line":14,"column":8,"nodeType":"101","messageId":"102","endLine":14,"endColumn":16},{"ruleId":"99","severity":1,"message":"112","line":15,"column":8,"nodeType":"101","messageId":"102","endLine":15,"endColumn":25},{"ruleId":"99","severity":1,"message":"113","line":16,"column":8,"nodeType":"101","messageId":"102","endLine":16,"endColumn":16},{"ruleId":"99","severity":1,"message":"114","line":104,"column":9,"nodeType":"101","messageId":"102","endLine":104,"endColumn":29},{"ruleId":"99","severity":1,"message":"115","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"104","line":2,"column":16,"nodeType":"101","messageId":"102","endLine":2,"endColumn":22},{"ruleId":"99","severity":1,"message":"116","line":5,"column":3,"nodeType":"101","messageId":"102","endLine":5,"endColumn":21},{"ruleId":"99","severity":1,"message":"117","line":6,"column":3,"nodeType":"101","messageId":"102","endLine":6,"endColumn":19},{"ruleId":"99","severity":1,"message":"115","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"118","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":22},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'UserOutlined' is defined but never used.","Identifier","unusedVar","'EyeTwoTone' is defined but never used.","'Button' is defined but never used.","'Space' is defined but never used.","'token' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","'InputBase' is defined but never used.","'Badge' is defined but never used.","'SearchIcon' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'MoreIcon' is defined but never used.","'handleMobileMenuOpen' is assigned a value but never used.","'useState' is defined but never used.","'MenuUnfoldOutlined' is defined but never used.","'MenuFoldOutlined' is defined but never used.","'isEmptyArray' is defined but never used.","no-global-assign","no-unsafe-negation"]