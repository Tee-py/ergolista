[{"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\index.js":"1","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\App.js":"2","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\reportWebVitals.js":"3","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Login\\index.js":"4","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Login\\components\\form.js":"5","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Register\\index.js":"6","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Register\\components\\form.js":"7","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\auth.js":"8","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\api.js":"9","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\index.js":"10","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\nav.js":"11","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\sidemenu.js":"12","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\project.js":"13","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\user.js":"14","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\utils\\utils.js":"15","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\createlist.js":"16","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\createtask.js":"17"},{"size":559,"mtime":1610637611273,"results":"18","hashOfConfig":"19"},{"size":551,"mtime":1610917270808,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1610631328838,"results":"21","hashOfConfig":"19"},{"size":1713,"mtime":1611436457441,"results":"22","hashOfConfig":"19"},{"size":3040,"mtime":1610824423783,"results":"23","hashOfConfig":"19"},{"size":1644,"mtime":1610841258324,"results":"24","hashOfConfig":"19"},{"size":3392,"mtime":1610824355516,"results":"25","hashOfConfig":"19"},{"size":464,"mtime":1611414512471,"results":"26","hashOfConfig":"19"},{"size":154,"mtime":1610831395338,"results":"27","hashOfConfig":"19"},{"size":6444,"mtime":1611490323672,"results":"28","hashOfConfig":"19"},{"size":6411,"mtime":1611438224838,"results":"29","hashOfConfig":"19"},{"size":1635,"mtime":1611485509230,"results":"30","hashOfConfig":"19"},{"size":1242,"mtime":1611491137135,"results":"31","hashOfConfig":"19"},{"size":816,"mtime":1611489559890,"results":"32","hashOfConfig":"19"},{"size":98,"mtime":1611414587346,"results":"33","hashOfConfig":"19"},{"size":1159,"mtime":1611436925212,"results":"34","hashOfConfig":"19"},{"size":1118,"mtime":1611490974289,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1wshp4d",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\index.js",[],["76","77"],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\App.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\reportWebVitals.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Login\\index.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Login\\components\\form.js",["78","79","80","81"],"import React from \"react\";\r\nimport { Formik, /*useFormikContext*/ } from \"formik\";\r\nimport { Input, Form, SubmitButton } from 'formik-antd';\r\nimport { UserOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport { Alert, Button, Space, Row, Col, Typography } from \"antd\";\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <Formik\r\n        initialValues={props.initialValues}\r\n        validate={props.formValidate}\r\n        onSubmit={props.handleFormSubmit}\r\n        validateOnMount={true}\r\n        >\r\n        {({\r\n            isValid,\r\n            handleSubmit,\r\n        }) => (\r\n            <Row align=\"middle\" justify=\"center\" style={{height: \"100vh\"}}>\r\n                <Col xs={{ span: 24}} md={{ span:12 }} lg={{ span: 8}}>\r\n                    <Form onSubmit={{handleSubmit}} style={{padding: \"2rem\"}}>\r\n                        <Typography.Title level={4} style={{textAlign: \"center\", marginBottom: \"2rem\"}}>Log in</Typography.Title>\r\n                        <Alert\r\n                            message={props.feedBack ? props.feedBack.message : \"\"}\r\n                            type={props.feedBack ? props.feedBack.type : \"\"}\r\n                            showIcon\r\n                            style={{marginBottom: \"1.5rem\", display: !props.feedBack.message ? \"None\" : \"\"}}\r\n                        />\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24}} md={{ span:24 }} lg={{ span: 24}}>\r\n                                <Input name=\"email\" type=\"email\" placeholder=\"Enter email\" size=\"large\" prefix={<MailOutlined />} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24}} md={{ span:24 }} lg={{ span: 24}}>\r\n                                <Input \r\n                                    name=\"password\" \r\n                                    type=\"password\" \r\n                                    placeholder=\"Enter password\" \r\n                                    size=\"large\" \r\n                                    prefix={<EyeInvisibleOutlined />}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                            <SubmitButton\r\n                                style={{backgroundColor: \"#4287f5\", color: \"white\"}}\r\n                                block\r\n                                disabled={!isValid}\r\n                                size=\"large\"\r\n                            >\r\n                                Login\r\n                            </SubmitButton>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row> \r\n        )}\r\n        </Formik>\r\n    )\r\n};\r\n\r\nexport default LoginForm;","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Register\\index.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\Register\\components\\form.js",["82","83","84"],"import React from \"react\";\r\nimport { Formik, /*useFormikContext*/ } from \"formik\";\r\nimport { Input, Form, SubmitButton } from 'formik-antd';\r\nimport { UserOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport { Alert, Button, Space, Row, Col, Typography } from \"antd\";\r\n\r\n\r\n\r\nconst RegisterForm = (props) => {\r\n    return (\r\n        <Formik\r\n        initialValues={props.initialValues}\r\n        validate={props.formValidate}\r\n        onSubmit={props.handleFormSubmit}\r\n        validateOnMount={true}\r\n        >\r\n        {({\r\n            isValid,\r\n            handleSubmit,\r\n        }) => (\r\n            <Row align=\"middle\" justify=\"center\" style={{height: \"100vh\"}}>\r\n                <Col xs={{ span: 24}} md={{ span:12 }} lg={{ span: 8}}>\r\n                    <Form onSubmit={{handleSubmit}} style={{padding: \"2rem\"}}>\r\n                        <Typography.Title level={4} style={{textAlign: \"center\", marginBottom: \"2rem\"}}>Sign Up</Typography.Title>\r\n                        <Alert\r\n                            message={props.feedBack ? props.feedBack.message : \"\"}\r\n                            type={props.feedBack ? props.feedBack.type : \"\"}\r\n                            showIcon\r\n                            style={{marginBottom: \"1.5rem\", display: !props.feedBack.message ? \"None\" : \"\"}}\r\n                        />\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24}} md={{ span:24 }} lg={{ span: 24}}>\r\n                                <Input name=\"username\" type=\"text\" placeholder=\"Enter username\" size=\"large\" prefix={<UserOutlined />} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24}} md={{ span:24 }} lg={{ span: 24}}>\r\n                                <Input name=\"email\" type=\"email\" placeholder=\"Enter email\" size=\"large\" prefix={<MailOutlined />} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24}} md={{ span:24 }} lg={{ span: 24}}>\r\n                                <Input \r\n                                    name=\"password\" \r\n                                    type=\"password\" \r\n                                    placeholder=\"Enter password\" \r\n                                    size=\"large\" \r\n                                    prefix={<EyeInvisibleOutlined />}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[24, 24]}>\r\n                            <Col xs={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                            <SubmitButton\r\n                                style={{backgroundColor: \"#4287f5\", color: \"white\"}}\r\n                                block\r\n                                disabled={!isValid}\r\n                                size=\"large\"\r\n                            >\r\n                                Register\r\n                            </SubmitButton>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row> \r\n        )}\r\n        </Formik>\r\n    )\r\n};\r\n\r\nexport default RegisterForm;","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\auth.js",["85"],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\api.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\index.js",["86","87"],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\nav.js",["88","89","90","91","92","93","94"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: \"\",\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NavBar(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\" onClick={props.showModal}>\r\n          <AddIcon />\r\n        </IconButton>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={props.handleClick}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" style={{color: \"white\"}} noWrap>\r\n            ErgoLista\r\n          </Typography>\r\n          {/*<div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>*/}\r\n          <div className={classes.grow} />\r\n          <div>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\" onClick={props.showModal}>\r\n              <AddIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n         {/*<div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n            </div>*/}\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\sidemenu.js",["95","96","97","98","99"],"import React, { useState } from \"react\";\r\nimport { Menu, Button } from 'antd';\r\n//import ListAltIcon from '@material-ui/icons/ListAlt';\r\n//import PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport {\r\n  SettingOutlined,\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  ScheduleOutlined,\r\n  LogoutOutlined,\r\n  KeyOutlined,\r\n  UserOutlined,\r\n  TagsOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst SideMenu = (props) => {\r\n\r\n  const testClick = (key, e) => {\r\n    console.log(key.domEvent);\r\n  }\r\n    \r\n    return (\r\n      <div style={{ width: props.menuWidth }}>\r\n        <Menu\r\n          defaultSelectedKeys={[props.currentList.id]}\r\n          defaultOpenKeys={['proj', \"acct\"]}\r\n          onClick={props.changeCurrentList}\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          inlineCollapsed={props.toggleState}\r\n          style={{height: \"100vh\"}}\r\n        >\r\n          <SubMenu key=\"proj\" icon={<ScheduleOutlined />} title=\"Projects\">\r\n            {\r\n              props.userList.map(list=><Menu.Item \r\n                key={list.id} \r\n                icon={<TagsOutlined />}\r\n              >{list.name}\r\n            </Menu.Item>)\r\n            }\r\n          </SubMenu>\r\n          <SubMenu key=\"acct\" icon={<SettingOutlined />} title=\"Account\">\r\n            <Menu.Item key=\"prof\" icon={<UserOutlined />}>Profile</Menu.Item>\r\n            <Menu.Item key=\"pchg\" icon={<KeyOutlined />}>Password Change</Menu.Item>\r\n            <Menu.Item key=\"lgout\" icon={<LogoutOutlined />}>Logout</Menu.Item>\r\n          </SubMenu>\r\n        </Menu>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default SideMenu;","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\project.js",["100"],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\network\\user.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\utils\\utils.js",[],"C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\createlist.js",["101","102"],"import React, { useState } from 'react';\r\nimport { Modal, Button } from 'antd';\r\nimport { Input } from 'antd';\r\nimport { ProjectOutlined } from '@ant-design/icons';\r\nimport { isEmptyArray } from 'formik';\r\nimport { Alert } from 'antd';\r\n\r\n\r\n\r\nconst CreateListModal = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <Modal title=\"Create Project\" \r\n        visible={props.isModalVisible} \r\n        onOk={props.handleOk} \r\n        onCancel={props.handleCancel}\r\n        footer={\"\"} \r\n        centered\r\n      >\r\n        {props.feedBack.message ? <Alert message={props.feedBack.message} type={props.feedBack.type} style={{marginBottom: \"1rem\"}} showIcon /> : \"\"}\r\n        <Input size=\"large\" onChange={(e)=>props.changeCurrentValue(e.currentTarget.value)} placeholder=\"Project Name\" prefix={<ProjectOutlined />} />\r\n        <Button \r\n          type=\"primary\" \r\n          block style={{marginTop: \"1rem\"}} \r\n          disabled={!props.modalState.buttonState}\r\n          onClick={props.handleButtonClick}\r\n          loading={props.modalState.isLoading}\r\n        >\r\n            Submit\r\n        </Button>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateListModal;","C:\\Users\\Tecra Owner\\Desktop\\ergolista\\src\\Pages\\DashBoard\\components\\createtask.js",["103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":22},{"ruleId":"109","severity":1,"message":"113","line":5,"column":32,"nodeType":"111","messageId":"112","endLine":5,"endColumn":42},{"ruleId":"109","severity":1,"message":"114","line":6,"column":17,"nodeType":"111","messageId":"112","endLine":6,"endColumn":23},{"ruleId":"109","severity":1,"message":"115","line":6,"column":25,"nodeType":"111","messageId":"112","endLine":6,"endColumn":30},{"ruleId":"109","severity":1,"message":"113","line":5,"column":32,"nodeType":"111","messageId":"112","endLine":5,"endColumn":42},{"ruleId":"109","severity":1,"message":"114","line":6,"column":17,"nodeType":"111","messageId":"112","endLine":6,"endColumn":23},{"ruleId":"109","severity":1,"message":"115","line":6,"column":25,"nodeType":"111","messageId":"112","endLine":6,"endColumn":30},{"ruleId":"109","severity":1,"message":"116","line":14,"column":11,"nodeType":"111","messageId":"112","endLine":14,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":37,"column":57,"nodeType":"119","messageId":"120","endLine":37,"endColumn":59},{"ruleId":"109","severity":1,"message":"121","line":122,"column":13,"nodeType":"111","messageId":"112","endLine":122,"endColumn":20},{"ruleId":"109","severity":1,"message":"122","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":17},{"ruleId":"109","severity":1,"message":"123","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":13},{"ruleId":"109","severity":1,"message":"124","line":12,"column":8,"nodeType":"111","messageId":"112","endLine":12,"endColumn":18},{"ruleId":"109","severity":1,"message":"125","line":14,"column":8,"nodeType":"111","messageId":"112","endLine":14,"endColumn":16},{"ruleId":"109","severity":1,"message":"126","line":15,"column":8,"nodeType":"111","messageId":"112","endLine":15,"endColumn":25},{"ruleId":"109","severity":1,"message":"127","line":16,"column":8,"nodeType":"111","messageId":"112","endLine":16,"endColumn":16},{"ruleId":"109","severity":1,"message":"128","line":104,"column":9,"nodeType":"111","messageId":"112","endLine":104,"endColumn":29},{"ruleId":"109","severity":1,"message":"129","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"114","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":22},{"ruleId":"109","severity":1,"message":"130","line":7,"column":3,"nodeType":"111","messageId":"112","endLine":7,"endColumn":21},{"ruleId":"109","severity":1,"message":"131","line":8,"column":3,"nodeType":"111","messageId":"112","endLine":8,"endColumn":19},{"ruleId":"109","severity":1,"message":"132","line":20,"column":9,"nodeType":"111","messageId":"112","endLine":20,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":26,"column":39,"nodeType":"119","messageId":"120","endLine":26,"endColumn":41},{"ruleId":"109","severity":1,"message":"129","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"133","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":22},{"ruleId":"109","severity":1,"message":"129","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"133","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":22},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'UserOutlined' is defined but never used.","Identifier","unusedVar","'EyeTwoTone' is defined but never used.","'Button' is defined but never used.","'Space' is defined but never used.","'token' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'SubMenu' is assigned a value but never used.","'InputBase' is defined but never used.","'Badge' is defined but never used.","'SearchIcon' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'MoreIcon' is defined but never used.","'handleMobileMenuOpen' is assigned a value but never used.","'useState' is defined but never used.","'MenuUnfoldOutlined' is defined but never used.","'MenuFoldOutlined' is defined but never used.","'testClick' is assigned a value but never used.","'isEmptyArray' is defined but never used.","no-global-assign","no-unsafe-negation"]